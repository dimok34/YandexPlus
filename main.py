import telebot
import random
import time
import subprocess
import threading
from telebot import types
from yookassa import Configuration, Payment
def start_bot():
        YOUR_CHAT_ID = 'xxxxx'
        Configuration.account_id = 'xxxxx'
        Configuration.secret_key = 'xxxxx'
        bot = telebot.TeleBot('xxxxxxx')

        @bot.message_handler(commands=['start'])
        def start(message):
            caption = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ —É–º–Ω–æ–≥–æ –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å! üöÄ"
            photopath = 'plus.jpg'
            with open(photopath, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=caption)
                markup = telebot.types.InlineKeyboardMarkup()
                markup.add(telebot.types.InlineKeyboardButton(text='3 –º–µ—Å—è—Ü–∞', callback_data='promo_3'))
                markup.add(telebot.types.InlineKeyboardButton(text='üí•12 –º–µ—Å—è—Ü–µ–≤üí•', callback_data='promo_12'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏:', reply_markup=markup)

        @bot.callback_query_handler(func=lambda call: True)
        def callback_handler(call):
            try:
                caption = ''
                photo = ''

                if call.data == 'promo_3':
                    bot.answer_callback_query(call.id, '–í—ã–ø–æ–ª–Ω–µ–Ω–æ')
                    photo = open('3.jpg', 'rb')
                    caption = '–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –ø—Ä–æ–º–æ–∫–æ–¥ —Å–µ—Ä–≤–∏—Å–∞ "–Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å" —Å—Ä–æ–∫–æ–º –Ω–∞ 3 –º–µ—Å—è—Ü–∞.\n\n–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–º, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∏ —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å–µ –ü–ª—é—Å üì≤\n–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —É –≤–∞—Å –±—É–¥–µ—Ç –ª–∏—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â–µ 3 —á–µ–ª–æ–≤–µ–∫.\n\n/pay3 - –∫—É–ø–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ (–∫–ª–∏–∫)'
                elif call.data == 'promo_12':
                    bot.answer_callback_query(call.id, '–í—ã–ø–æ–ª–Ω–µ–Ω–æ')
                    photo = open('12.jpg', 'rb')
                    caption = '–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –ø—Ä–æ–º–æ–∫–æ–¥ —Å–µ—Ä–≤–∏—Å–∞ "–Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å" —Å—Ä–æ–∫–æ–º –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤.\n\n–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–º, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∏ —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å–µ –ü–ª—é—Å üì≤\n–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —É –≤–∞—Å –±—É–¥–µ—Ç –ª–∏—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â–µ 3 —á–µ–ª–æ–≤–µ–∫.\n\n/pay12 - –∫—É–ø–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ (–∫–ª–∏–∫)'

                bot.send_photo(call.message.chat.id, photo, caption=caption)

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
                bot.send_message(call.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. \n–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.')

        @bot.message_handler(commands=['pay3'])
        def start_payment(message):
            def payment_thread():
                try:
                    payment = Payment.create({
                        "amount": {
                            "value": "499.00",
                            "currency": "RUB"
                        },
                        "confirmation": {
                            "type": "redirect",
                            "return_url": "https://t.me/WalleRobottbot"
                        },
                        "capture": True,
                        "description": "–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ '–Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å –Ω–∞ 3 –º–µ—Å—è—Ü–∞'"
                    })
                    payment_url = payment.confirmation.confirmation_url
                    keyboard = types.InlineKeyboardMarkup()
                    url_button = types.InlineKeyboardButton(text='–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è', url=payment_url)
                    keyboard.add(url_button)
                    bot.send_message(message.chat.id,
                                     f"–û–ø–ª–∞—Ç–∏—Ç–µ 499 —Ä—É–±–ª–µ–π, —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:\n",
                                     reply_markup=keyboard)
                    while True:
                        payment = Payment.find_one(payment.id)
                        if payment.status == 'succeeded':
                            bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n–°–µ–π—á–∞—Å –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –ø—Ä–æ–º–æ–∫–æ–¥ü§©")
                            time.sleep(1)
                            bot.send_message(YOUR_CHAT_ID, "–£ –≤–∞—Å –∫—É–ø–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ 499—Ä")
                            promo = random.choice(get_promo_lines('promo3.txt'))
                            delete_promo_line('promo3.txt', promo)
                            bot.send_message(message.chat.id, promo)
                            bot.send_message(message.chat.id, "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—èüíô")
                            break
                        elif payment.status == 'canceled':
                            bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")
                            break
                        else:
                            time.sleep(5)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞: {e}")
                    bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. \n–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

            threading.Thread(target=payment_thread).start()



        @bot.message_handler(commands=['pay12'])
        def start_payment(message):
            def payment_thread():
                try:
                    payment = Payment.create({
                        "amount": {
                            "value": "1499.00",
                            "currency": "RUB"
                        },
                        "confirmation": {
                            "type": "redirect",
                            "return_url": "https://t.me/WalleRobottbot"
                        },
                        "capture": True,
                        "description": "–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ '–Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤'"
                    })
                    payment_url = payment.confirmation.confirmation_url
                    keyboard = types.InlineKeyboardMarkup()
                    url_button = types.InlineKeyboardButton(text='–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è', url=payment_url)
                    keyboard.add(url_button)
                    bot.send_message(message.chat.id,
                                     f"–û–ø–ª–∞—Ç–∏—Ç–µ 1499 —Ä—É–±–ª–µ–π, —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:\n",
                                     reply_markup=keyboard)
                    while True:
                        payment = Payment.find_one(payment.id)
                        if payment.status == 'succeeded':
                            bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n–°–µ–π—á–∞—Å –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –ø—Ä–æ–º–æ–∫–æ–¥ü§©")
                            time.sleep(1)
                            bot.send_message(YOUR_CHAT_ID, "–£ –≤–∞—Å –∫—É–ø–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ 1499—Ä")
                            promo = random.choice(get_promo_lines('promo12.txt'))
                            delete_promo_line('promo12.txt', promo)
                            bot.send_message(message.chat.id, promo)
                            bot.send_message(message.chat.id, "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—èüíô")
                            break
                        elif payment.status == 'canceled':
                            bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")
                            break
                        else:
                            time.sleep(5)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞: {e}")
                    bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n–í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É /start')

            threading.Thread(target=payment_thread).start()


        def get_promo_lines(filename):
            with open(filename, 'r') as file:
                lines = [line.strip() for line in file]
            return lines


        def delete_promo_line(filename, line):
            with open(filename, 'r') as f:
                lines = f.readlines()
            with open(filename, 'w') as f:
                for l in lines:
                    if l.strip() != line:
                        f.write(l)


        bot.polling()


def restart_bot():
    while True:
        try:
            start_bot()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
            print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
            subprocess.run("main.py", shell=True)


restart_bot()